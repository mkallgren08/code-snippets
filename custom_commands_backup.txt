#!/bin/bash
function print_my_input() {
  # prints the input
  echo 'Your input: ' $1
}

#####################################################
#            Directory and Project Creation
#####################################################

# Create a new full stack React app in the current directory. The syntax is createReact [appname] [<optional '-a' flag for auth react>]
function createReact(){
  # coding-local && cd Personal_Projects && code-snippets
  mkdir $1
  cd $1
  CURRENT_DIR="$(pwd)"
  echo $CURRENT_DIR
  coding-local && cd Personal_Projects && cd code-snippets
  if [ $2 ]; then
    echo 'Making an auth file with name '$1
    cd App_Templates/react-template-with-auth
  else
    echo 'Making a non-auth file with name '$1
    cd App_Templates/react-template 
  fi
  cp -r * $CURRENT_DIR && cd $CURRENT_DIR && mv a.gitignore .gitignore
  # Create new git remote for repo
  git init && git add . && git commit -m "First commit for project $1"
  echo "------------------- IMPORTANT!!! --------------------------" 
  echo "Next steps: create a new repo on your github profile with NO .gitignore or README then git the link from the 'Clone or download' option on the screen and copy it below"
  read URL
  git remote add origin $URL && git remote -v
  echo 'Repo is linked to GitHub!'
  git pull origin master
  git init && git add . && git commit -m "Pulled down the .gitignore"
  git push origin master
  yarn custom-init
  heroku create
  echo 'Checking that remote is currently set up for heroku deployment...'
  git remote -v
  yarn deploy
  echo 'Heroku app is deployed!'
  git push origin master
  echo 'Build complete - have fun!!'
}


# Create a new 3D printer project folder

function new3DProject(){
  mkdir $1
  cd $1
  mkdir ABS PLA
  cd ABS
  mkdir 0.1_Nozzle 0.2_Nozzle 0.3_Nozzle 0.4_Nozzle 0.5_Nozzle 0.6_Nozzle 0.8_Nozzle 1.0_Nozzle
  cd .. && cd PLA
  mkdir 0.1_Nozzle 0.2_Nozzle 0.3_Nozzle 0.4_Nozzle 0.5_Nozzle 0.6_Nozzle 0.8_Nozzle 1.0_Nozzle
  cd ../..
  echo "Folders created - have fun printing!"  
 }

# Create new diretory with $1 subdirectories
function makeNewDirs(){
  # makes new numbered directories
  # $1 is the number of directories to make
  # $2 is the name of the parent directory
  mkdir $2
  cd $2
  COUNTER=1
  while [  $COUNTER -le $1 ]; do
      echo The counter is $COUNTER
      mkdir question_$COUNTER
      let COUNTER=COUNTER+1 
  done
}


#####################################################
#             Git Functionality 
#####################################################
function gacMas(){
  # Add, Commit, Push to Master Branch with custom message
  # As part of the git commit , take all the parameters ($*) and use them as the commit message
  git add . && git commit -m "$*" && git push origin master
}

function gacBranch(){
  # Add, Commit, Push to Other Branch with custom message and set the upstream branch so a simple git push can be used
  # first arg is branch name, all other args are commit message
  git add . && git commit -m "${*:2}" && git push --set-upstream origin $1
}


function gacUp(){
  #Add, commit, push to upstream branch
  #Only works if upstream has been previously set with git push --set-upstream origin <branch>
  git add . && git commit -m "$*" && git push
}

#####################################################
#             List My Commands (For Reference)
#####################################################

function myCommands(){
  coding-local && cd Personal_Projects && cd code-snippets && node readAliases.js $1
}
